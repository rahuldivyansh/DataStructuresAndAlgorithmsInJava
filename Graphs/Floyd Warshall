//User function template for JAVA

class Solution
{
    public void shortest_distance(int[][] matrix)
    {
        // Changing -1 to max value
        for(int i = 0; i < matrix.length;i++){
                for(int j = 0; j < matrix[i].length; j++){
                    // As we use comparision later to find shortest path, we need max 
                    // value initially in place of 0. And here that max value of 
                    // matrix[i][j] is given as 1000
                    if(matrix[i][j] == -1){
                        matrix[i][j] = 1001;    
                    }
                }
            }
            
        for(int k = 0; k < matrix.length; k++){
            for(int i = 0; i < matrix.length;i++){
                for(int j = 0; j < matrix[i].length; j++){
                    if(matrix[i][k] + matrix[k][j] < matrix[i][j]){
                        matrix[i][j] = matrix[i][k] + matrix[k][j];
                    }
                }
            }
        }
        
        // Changing 1001 to -1
        for(int i = 0; i < matrix.length;i++){
                for(int j = 0; j < matrix[i].length; j++){
                    
                    if(matrix[i][j] == 1001){
                        matrix[i][j] = -1;    
                    }
                }
            }
    }
}